{
  "hash": "da7fa38d70a72bf644995805c63c7765",
  "result": {
    "markdown": "---\ntitle: \"Clear Paths for Reproducible R: Here Package\"\nauthor: \"Soundarya Soundararajan\"\ndate: \"2023-03-27\"\ncategories: [best-practices, here, projects]\nimage: \"image.jpg\"\n---\n\n\nThis post is an introduction to the `here` package, a powerful tool that helps maintain best practices in reproducible workflows.\n\n![Where are you? I am here!](image.jpg){fig-align=\"center\"}\n\nBefore using the `here` package I faced two main issues.\n\n1.  Switching between my Windows work computer and Mac Laptop at home, meant that I had to write two different sets of code to access files.\n\n2.  As I write both .R and .Rmd files, accessing the same data in both formats required different file paths. This has been a ongoing issue for me.\n\n![A question to my post on here in Twitter](projects.png){fig-align=\"center\"}\n\nInitially, I thought using a consistent folder structure with RStudio's projects [^1] would fix the first issue. However, this solution created additional confusion because my work computer's operating system was different from my home computer's. To make matters worse, my work system was fixed and the root directory changed, which added further complexity to my workflow.\n\n[^1]: In a previous blog post, I wrote about the importance of taking the first steps when starting a new project.[Access it here](https://ss-myrspace.netlify.app/posts/2021-08-03-starting-projects-in-rstudio/)\n\nAs a result, I found myself writing separate sets of code to work effectively in both locations.\n\n![Initial fix that worked temporarily](before.jpeg){fig-align=\"center\"}\n\nI encountered further difficulties when I tried to automate my workflow by sourcing files. Alas, this made me go grrr 😠.\n\nThe answer to the troubles are in the `here` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(here)#<1>\nhere()#<2>\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"D:/MyRProjects/SoundReproSteps\"\n```\n:::\n:::\n\n\n1.  Installs and loads the package\n2.  Tells you where the root is\n\n📍By knowing where the root is helps you write better file paths.\n\nFor example, let's say this is your folder structure.\n\n├── ProjectName.Rproj\\\n├── 📁Data\\\n-------- ├── data_to_use.csv\\\n├── 📁Docs\\\n-- ------├── example1.R\\\n-------- ├── example2.Rmd\n\n### Before here\n\nTo be able to access the data, the code in .R file would be\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#read.csv(\"D:/MyRProjects/SoundReproSteps/Data/data_to_use.csv\")\n```\n:::\n\n\nAs mentioned above, this issue arises because of the use of absolute paths, which are not suitable for use inside an .Rmd file. This is because the root directory for an .Rmd file is determined by its location.\n\n> 🦹‍♀️`here` is for the rescue, do not fret!\n\n### After here\n\nNow both .R and .Rmd can take the following path.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#read.csv(here(\"Data\", \"data_to_use.csv\"))\n```\n:::\n\n\nPlease note that the `Data` folder is the first folder to be accessed in the root directory, and subsequent files should be specified by their folder names\n\n![My long standing problem got fixed with the here package](after.png){fig-align=\"center\" width=\"702\"}\n\nThe here package solves both of the problems we encountered earlier, making life easier for all of us. Read more about the package here, [here](https://here.r-lib.org/)! (I think it's pretty funny that it's called 'here' 😄)\n\n## The key takeaway for reproducible workflows is this\n\nUse the `here` package to write relative paths for reading and writing your data and files. This will streamline your workflow, allowing you to work seamlessly across different platforms and eliminating the need to constantly adjust file paths when switching between .R and .Rmd files.\n\n> [**Streamline your workflow with here and say goodbye to path confusion!**]{style=\"color:#694644;\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}